name: Tag pimusic version

on:
  push:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Verify run id
      run : echo Run Id $GITHUB_RUN_ID 

    - name: Set new tag
      id: vars
      run: |
        version=$(git tag -l | sort -V | tail -1)
        major=$(echo $version | grep -Eo "v[0-9]{1,}\." | sed -r "s/(v|\.)//g")
        minor=$(echo $version | grep -Eo "\.[0-9]{1,}\." | sed "s/\.//g")
        hotfix=$(echo $version | grep -Eo "\.[0-9]{1,}$" | sed "s/\.//g")
        echo "version: ${version}, major: ${major}, minor: ${minor}, hotfix: ${hotfix}"
        echo "git branch: ${GITHUB_REF##*/}" 
        if [ "${GITHUB_REF##*/}" == "master" ]; then
          major=$(( major + 1 ))
          minor=0
          hotfix=0
        elif [ "${GITHUB_REF##*/}" == "develop" ]; then
          minor=$(( minor + 1 ))
          hotfix=0
        elif $(echo "${GITHUB_REF}" | grep -q "hotfix"); then
          hotfix=$(( hotfix + 1 ))
        fi
        new_version="v${major}.${minor}.${hotfix}"
        echo "Old version: ${version}, new version ${new_version}"
        echo ::set-output name=new_version::${new_version}

        #- name: Docker build and push
        #  shell: bash
        #  env: 
        #    DH_USERNAME: ${{ secrets.DOCKERHUB_LOGIN }}
        #    DH_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
        #  run: |
        #    docker build -f ./Dockerfiles/pimusic_amd64.dockerfile -t ${DH_USERNAME}/pimusic_amd64:${{ steps.vars.outputs.new_version }} .
        #    echo ${DH_TOKEN} | docker login --username ${DH_USERNAME} --password-stdin
        #    docker push ${DH_USERNAME}/pimusic_amd64:${{ steps.vars.outputs.new_version }}
        #    if [ "${GITHUB_REF##*/}" == "master" ]; then
        #    docker tag ${DH_USERNAME}/pimusic_amd64:${{ steps.vars.outputs.new_version} ${DH_USERNAME}/pimusic_amd64:latest 
        #      docker push ${DH_USERNAME}/pimusic_amd64:latest
        #    elif [ "${GITHUB_REF##*/}" == "develop" ]; then
        #      docker tag ${DH_USERNAME}/pimusic_amd64:${{ steps.vars.outputs.new_version} ${DH_USERNAME}/pimusic_amd64:develop 
        #      docker push ${DH_USERNAME}/pimusic_amd64:develop
        #    fi
        #    

        #- name: Create new tag
        #  uses: tvdias/github-tagger@v0.0.1
        #  with:
        #    repo-token: "${{ secrets.GITHUB_TOKEN }}"
        #    tag: "${{ steps.vars.outputs.new_version }}"
